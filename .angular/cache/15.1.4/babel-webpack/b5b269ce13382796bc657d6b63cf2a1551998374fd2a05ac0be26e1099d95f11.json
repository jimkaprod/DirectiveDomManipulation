{"ast":null,"code":"import { ElementRef, ViewContainerRef } from '@angular/core';\nimport { ItemListComponent } from '../item-list/item-list.component';\nimport { SimpleDirective } from './simple.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/service-loader.service\";\nconst _c0 = [\"simpleElemRef\"];\nconst _c1 = [\"cardContainerRef\"];\nconst _c2 = [\"listContainerRef\"];\nconst _c3 = [\"itemTpl\"];\nconst _c4 = [\"newList\"];\nconst _c5 = [\"itemListTpl\"];\nconst _c6 = [\"tplCards\"];\nfunction MainComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-item-list\", 6);\n    i0.ɵɵlistener(\"toggleContent\", function MainComponent_ng_template_9_Template_app_item_list_toggleContent_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.toggleContent($event));\n    })(\"toggleContent2\", function MainComponent_ng_template_9_Template_app_item_list_toggleContent2_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggleContent2($event));\n    })(\"removeComponent\", function MainComponent_ng_template_9_Template_app_item_list_removeComponent_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.removeComponent($event));\n    })(\"removeComponent2\", function MainComponent_ng_template_9_Template_app_item_list_removeComponent2_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.removeComponent2($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.option;\n    i0.ɵɵproperty(\"item\", option_r4);\n  }\n}\nexport let MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor(renderer, cdRef, service) {\n      this.renderer = renderer;\n      this.cdRef = cdRef;\n      this.service = service;\n      // @HostBinding('role') role = 'button';\n      this.hasCss = true;\n      this.listItem = [{\n        titre: 'mon 1er',\n        description: 'ca commence bien'\n      }, {\n        titre: 'mon 2eme',\n        description: 'Et ca continue'\n      }, {\n        titre: 'mon 3eme',\n        description: 'Encore et encore'\n      }];\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      console.log('ngAfterViewChecked');\n      this.listItem.forEach((item, index) => {\n        let view = this.newList.createEmbeddedView(this.itemListTpl, {\n          option: {\n            item: this.listItem[index],\n            divId: `thumbnail-${index}`,\n            closeId: `close-${index}`\n          }\n        });\n        view.context.option.viewIndexRef = view;\n      });\n      this.cdRef.detectChanges();\n    }\n    // ngAfterViewInit(): void {\n    // outputs `I am span`\n    // console.log(this.simpleElemRef);\n    // let view = this.tpl.createEmbeddedView(null);\n    // let view2 = this.tpl.createEmbeddedView(null);\n    // this.listContainerRef.insert(view);\n    // this.listContainerRef.insert(view2);\n    // console.log('listContainerRef>>>');\n    // console.log('tpl>>>', this.tpls);\n    // this.listContainerRef.clear()\n    // this.renderer\n    // }\n    // ngAfterViewChecked(): void {\n    //   this.listItem.forEach((item) => {\n    //     this.listContainerRef.createEmbeddedView(this.itemTpl, {\n    //       $implicit: item,\n    //     });\n    //   });\n    //   this.isLoaded = true;\n    // this.cdRef.detectChanges();\n    // }\n    // ngAfterViewInit(): void {}\n    toggle(index) {\n      console.log('length>>>>', this.tplCards.length);\n      // console.log(this.tplCards.toArray());\n      console.log('--55>>', this.tplCards.toArray().length);\n      // console.log('index>>>>', this.tplCards.get(index));\n    }\n\n    vienwContainerClear() {\n      this.listContainerRef.clear();\n    }\n    toggleContent(viewContainerRef) {\n      console.log('-xx->', viewContainerRef.element);\n      this.service.addDynamicComponent(viewContainerRef);\n      console.log('TOGGLE1');\n    }\n    toggleContent2(viewContainerRef) {\n      const elemRef = viewContainerRef.element;\n      console.log(elemRef);\n      console.log('-0->', viewContainerRef.element);\n      console.log('-1->', this.newList.length);\n      this.service.addDynamicComponent(viewContainerRef);\n      console.log('TOGGLE2');\n    }\n    removeComponent(view) {\n      const index = this.newList.indexOf(view);\n      console.log('index>>>>', index);\n      this.newList.remove(index);\n      console.log('REMOVE');\n    }\n    removeComponent2(viewContainerRef) {\n      viewContainerRef.clear();\n      console.log('REMOVE2');\n    }\n  }\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ServiceLoaderService));\n  };\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    viewQuery: function MainComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n        i0.ɵɵviewQuery(_c1, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c2, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5, ViewContainerRef);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.simpleElemRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardContainerRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listContainerRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTpl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.newList = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemListTpl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplCards = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function MainComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"add-class\", ctx.hasCss);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 15,\n    vars: 0,\n    consts: [[\"simpleElemRef\", \"\"], [\"appSimple\", \"\"], [1, \"my-5\"], [\"itemListTpl\", \"\"], [\"newList\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"item\", \"toggleContent\", \"toggleContent2\", \"removeComponent\", \"removeComponent2\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Projection2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", null, 0);\n        i0.ɵɵtext(4, \"i am a div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵtext(6, \"i am a div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, MainComponent_ng_template_9_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementContainer(11, null, 4);\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function MainComponent_Template_button_click_13_listener() {\n          return ctx.vienwContainerClear();\n        });\n        i0.ɵɵtext(14, \"Clear\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [SimpleDirective, ItemListComponent]\n  });\n  return MainComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
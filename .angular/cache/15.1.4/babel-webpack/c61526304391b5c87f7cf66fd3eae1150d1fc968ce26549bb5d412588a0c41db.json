{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service-loader.service\";\nconst _c0 = [\"dynamic\"];\nfunction MainComponent_ng_template_2_Template(rf, ctx) {}\nexport let MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor(service, viewContainerRef) {\n      this.service = service;\n      this.viewContainerRef = viewContainerRef;\n      service.addDynamicComponent(this.viewContainerRef);\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      this.service.addDynamicComponent(this.dynamicViewcontainerRef);\n    }\n  }\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.ServiceLoaderService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    viewQuery: function MainComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicViewcontainerRef = _t.first);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 0,\n    consts: [[\"dynamic\", \"\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, MainComponent_ng_template_2_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    }\n  });\n  return MainComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}